Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"$schema\": \"https://www.raycast.com/schemas/extension.json\",\n  \"name\": \"reflect\",\n  \"title\": \"Reflect\",\n  \"description\": \"Navigate within Reflect and quickly append to your daily notes.\",\n  \"icon\": \"reflect.png\",\n  \"author\": \"ryon\",\n  \"contributors\": [\n    \"joshknowles\",\n    \"tylerwince\",\n    \"ocavue\"\n  ],\n  \"categories\": [\n    \"Applications\",\n    \"Productivity\"\n  ],\n  \"license\": \"MIT\",\n  \"commands\": [\n    {\n      \"name\": \"append\",\n      \"title\": \"Append to Daily Note\",\n      \"subtitle\": \"Reflect\",\n      \"description\": \"Append to your Reflect Daily Note.\",\n      \"keywords\": [\n        \"reflect\",\n        \"daily\",\n        \"append\"\n      ],\n      \"mode\": \"view\"\n    },\n    {\n      \"name\": \"quickAppend\",\n      \"title\": \"Quick Append to Daily Note\",\n      \"subtitle\": \"Reflect\",\n      \"description\": \"Quickly append to your Reflect Daily Note via command arguments or fallback text.\",\n      \"keywords\": [\n        \"reflect\",\n        \"daily\",\n        \"append\"\n      ],\n      \"preferences\": [\n        {\n          \"name\": \"graphId\",\n          \"title\": \"Graph ID\",\n          \"description\": \"Reflect Graph ID\",\n          \"type\": \"textfield\",\n          \"required\": true\n        },\n        {\n          \"name\": \"listName\",\n          \"title\": \"Parent List (Optional)\",\n          \"description\": \"Parent list to append your notes within (i.e. \uD83D\uDDD3 Daily Log)\",\n          \"type\": \"textfield\",\n          \"required\": false\n        },\n        {\n          \"name\": \"prependTimestamp\",\n          \"label\": \"Prepend Timestamp (Optional)\",\n          \"description\": \"Prepend a timestamp to your note\",\n          \"type\": \"checkbox\",\n          \"required\": false\n        },\n        {\n          \"name\": \"timestampFormat\",\n          \"title\": \"Timestamp Format\",\n          \"description\": \"The format of prepended timestamp\",\n          \"type\": \"dropdown\",\n          \"data\": [{\n            \"title\": \"12 hour\",\n            \"value\": \"12\"\n          },{\n            \"title\": \"24 hour\",\n            \"value\": \"24\"\n          }],\n          \"default\": \"12\",\n          \"required\": false\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"text\",\n          \"type\": \"text\",\n          \"placeholder\": \"What's top of mind?\",\n          \"required\": true\n        }\n      ],\n      \"mode\": \"no-view\"\n    },\n    {\n      \"name\": \"new\",\n      \"title\": \"New Note\",\n      \"subtitle\": \"Reflect\",\n      \"description\": \"Create a new note within the Reflect app.\",\n      \"mode\": \"no-view\",\n      \"keywords\": [\n        \"write note\",\n        \"add note\",\n        \"make note\",\n        \"create note\"\n      ]\n    },\n    {\n      \"name\": \"search\",\n      \"title\": \"Search Notes\",\n      \"subtitle\": \"Reflect\",\n      \"description\": \"Search for notes within the Reflect App.\",\n      \"mode\": \"no-view\",\n      \"keywords\": [\n        \"search note\"\n      ]\n    },\n    {\n      \"name\": \"daily\",\n      \"title\": \"Daily Notes\",\n      \"subtitle\": \"Reflect\",\n      \"description\": \"Navigate to the daily notes within the Reflect app.\",\n      \"mode\": \"no-view\",\n      \"keywords\": [\n        \"daily note\",\n        \"note today\",\n        \"daily\"\n      ]\n    }\n  ],\n  \"dependencies\": {\n    \"@raycast/api\": \"^1.51.1\",\n    \"@raycast/utils\": \"^1.6.1\",\n    \"node-fetch\": \"^3.3.1\",\n    \"date-fns\": \"^2.23.0\",\n    \"run-applescript\": \"^6.1.0\"\n  },\n  \"devDependencies\": {\n    \"@raycast/eslint-config\": \"1.0.5\",\n    \"@types/node\": \"18.8.3\",\n    \"@types/react\": \"18.0.9\",\n    \"eslint\": \"^7.32.0\",\n    \"prettier\": \"^2.5.1\",\n    \"typescript\": \"^4.4.3\"\n  },\n  \"scripts\": {\n    \"build\": \"ray build -e dist\",\n    \"dev\": \"ray develop\",\n    \"fix-lint\": \"ray lint --fix\",\n    \"lint\": \"ray lint\",\n    \"publish\": \"ray publish\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision e3fb6ba668612325b2be7758797a07c7564779f2)
+++ b/package.json	(date 1700573506076)
@@ -8,13 +8,24 @@
   "contributors": [
     "joshknowles",
     "tylerwince",
-    "ocavue"
+    "ocavue",
+    "theomjones"
   ],
   "categories": [
     "Applications",
     "Productivity"
   ],
   "license": "MIT",
+  "preferences": [
+    {
+      "name": "parentLists",
+      "type": "textfield",
+      "description": "Comma separated lists of parent lists to append your notes within (i.e. ðŸ—“ Daily Log, or [[ðŸ—“ Daily Log]])",
+      "required": false,
+      "title": "Parent Lists (comma separated)",
+      "placeholder": "ðŸ—“ Daily Log, [[âœ… Tasks]]"
+    }
+  ],
   "commands": [
     {
       "name": "append",
@@ -49,7 +60,7 @@
         {
           "name": "listName",
           "title": "Parent List (Optional)",
-          "description": "Parent list to append your notes within (i.e. ðŸ—“ Daily Log)",
+          "description": "Parent list to append your notes within (i.e. ðŸ—“ Daily Log, or [[âœ… Tasks]])",
           "type": "textfield",
           "required": false
         },
@@ -65,13 +76,16 @@
           "title": "Timestamp Format",
           "description": "The format of prepended timestamp",
           "type": "dropdown",
-          "data": [{
-            "title": "12 hour",
-            "value": "12"
-          },{
-            "title": "24 hour",
-            "value": "24"
-          }],
+          "data": [
+            {
+              "title": "12 hour",
+              "value": "12"
+            },
+            {
+              "title": "24 hour",
+              "value": "24"
+            }
+          ],
           "default": "12",
           "required": false
         }
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n\n# Raycast specific files\nraycast-env.d.ts\n\n# misc\n.DS_Store\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision e3fb6ba668612325b2be7758797a07c7564779f2)
+++ b/.gitignore	(date 1700574848990)
@@ -8,3 +8,4 @@
 
 # misc
 .DS_Store
+.idea/
\ No newline at end of file
Index: src/append.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { appendToDailyNote, getGraphs, Graph, ReflectApiError } from \"./helpers/api\";\nimport { authorize } from \"./helpers/oauth\";\nimport { prependTimestampIfSelected } from \"./helpers/dates\";\n\nimport { Action, ActionPanel, closeMainWindow, Form, popToRoot, showToast, Toast, LocalStorage } from \"@raycast/api\";\nimport { FormValidation, useForm } from \"@raycast/utils\";\nimport { useEffect, useState } from \"react\";\n\ninterface FormValues {\n  note: string;\n  prependTimestamp: boolean;\n  parentList: string;\n  graphId: string;\n  timestampFormat?: string;\n}\n\nexport default function Command() {\n  const { handleSubmit, itemProps } = useForm<FormValues>({\n    async onSubmit(values: FormValues) {\n      const toast = await showToast({\n        style: Toast.Style.Animated,\n        title: \"Appending to Reflect Daily Note...\",\n      });\n\n      try {\n        const authorizationToken = await authorize();\n        const text = prependTimestampIfSelected(values.note, {\n          prependTimestamp: values.prependTimestamp,\n          timestampFormat: values.timestampFormat as \"12\" | \"24\" | undefined,\n        });\n\n        await appendToDailyNote(authorizationToken, values.graphId, text, values.parentList);\n        await LocalStorage.setItem(\"graphId\", values.graphId);\n\n        toast.hide();\n        popToRoot();\n        closeMainWindow();\n      } catch (error) {\n        if (error instanceof ReflectApiError) {\n          toast.style = Toast.Style.Failure;\n          toast.title = error.message;\n        }\n      }\n    },\n\n    validation: {\n      note: FormValidation.Required,\n      graphId: FormValidation.Required,\n    },\n  });\n\n  const [graphs, setGraphs] = useState<Graph[]>([]);\n  const [graphId, setGraphId] = useState<string>(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const lastGraphId = await LocalStorage.getItem<string>(\"graphId\");\n\n      const authorizationToken = await authorize();\n      const graphs = await getGraphs(authorizationToken);\n      setGraphs(graphs);\n\n      if (lastGraphId) setGraphId(lastGraphId);\n    }\n\n    fetchData();\n  }, []);\n\n  const showTimestampFormat: boolean = itemProps.prependTimestamp.value ?? false;\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm title=\"Submit\" onSubmit={handleSubmit} />\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea {...itemProps.note} title=\"Note\" />\n      <Form.Checkbox {...itemProps.prependTimestamp} label=\"Prepend Timestamp\" storeValue={true} />\n      {showTimestampFormat ? (\n        <Form.Dropdown {...itemProps.timestampFormat} storeValue={true}>\n          <Form.Dropdown.Item value=\"12\" title=\"12 hour\" />\n          <Form.Dropdown.Item value=\"24\" title=\"24 hour\" />\n        </Form.Dropdown>\n      ) : null}\n      <Form.TextField\n        {...itemProps.parentList}\n        title=\"Parent List (Optional)\"\n        placeholder=\"i.e. \uD83D\uDDD3 Daily Log\"\n        storeValue={true}\n      />\n      <Form.Separator />\n      <Form.Dropdown {...itemProps.graphId} title=\"Graph\" value={graphId} onChange={setGraphId}>\n        {graphs.map((graph) => (\n          <Form.Dropdown.Item key={graph.id} value={graph.id} title={graph.name} />\n        ))}\n      </Form.Dropdown>\n    </Form>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/append.tsx b/src/append.tsx
--- a/src/append.tsx	(revision e3fb6ba668612325b2be7758797a07c7564779f2)
+++ b/src/append.tsx	(date 1700574816662)
@@ -2,7 +2,17 @@
 import { authorize } from "./helpers/oauth";
 import { prependTimestampIfSelected } from "./helpers/dates";
 
-import { Action, ActionPanel, closeMainWindow, Form, popToRoot, showToast, Toast, LocalStorage } from "@raycast/api";
+import {
+  Action,
+  ActionPanel,
+  closeMainWindow,
+  Form,
+  popToRoot,
+  showToast,
+  Toast,
+  LocalStorage,
+  getPreferenceValues
+} from "@raycast/api";
 import { FormValidation, useForm } from "@raycast/utils";
 import { useEffect, useState } from "react";
 
@@ -68,6 +78,10 @@
 
   const showTimestampFormat: boolean = itemProps.prependTimestamp.value ?? false;
 
+  const {parentLists = ""} = getPreferenceValues<ExtensionPreferences>()
+
+  const parentListOptions = parentLists.split(',').map((item) => item.trim());
+
   return (
     <Form
       actions={
@@ -84,12 +98,15 @@
           <Form.Dropdown.Item value="24" title="24 hour" />
         </Form.Dropdown>
       ) : null}
-      <Form.TextField
-        {...itemProps.parentList}
-        title="Parent List (Optional)"
-        placeholder="i.e. ðŸ—“ Daily Log"
-        storeValue={true}
-      />
+      {parentListOptions.length > 0 ? (
+          <Form.Dropdown storeValue={true} title="Parent List (Optional)" {...itemProps.parentList}>
+            {parentListOptions.map(opt => {
+              return (
+                  <Form.Dropdown.Item key={opt} value={opt} title={opt.replaceAll('[', '').replaceAll(']', '')} />
+              )
+            })}
+          </Form.Dropdown>
+      ) : null}
       <Form.Separator />
       <Form.Dropdown {...itemProps.graphId} title="Graph" value={graphId} onChange={setGraphId}>
         {graphs.map((graph) => (
